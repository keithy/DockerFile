#!/usr/bin/env ruby
#
# stuff it is helpful to know!
#https://medium.com/zendesk-engineering/running-a-child-process-in-ruby-properly-febd0a2b6ec8

require "thor"
require "pp"
require "rio"
require "rake"
require 'shell'
require 'fileutils'
require 'find'
require 'file-find'
require 'subprocess'
require 'lib/box_utils.rb'

class Boxes
  def self.all
    RIO.cwd.all.files('Dockerfile').collect { | df | self.new( df )}
  end

  def self.matching( match)
    Boxes.all.select{ | box | box.name.match(match) }
  end

  def initialize( dockerfile )
    @home = dockerfile.dirname
  end

  def name
    @home.filename.to_s
  end

  def to_s
    @home.to_s
  end
end

class Box < Thor
  include Thor::Actions

  desc "boxes", "images available"
  def boxes
    puts "Available Boxes:"
    puts Boxes.all
  end

  desc "build", "build containers"
  def build( match = '.*' )
    puts "I'm a build task!"
    boxes = Boxes.matching(match)
    puts "You supplied: #{boxes}"

    Utils::Subprocess.new 'docker build -t' + box.name  do |stdout, stderr, thread|
      puts "stdout: #{stdout}" # => "simple output"
      puts "stderr: #{stderr}" # => "error: an error happened"
      puts "pid: #{thread.pid}" # => 12345
    end

  end

  desc "run", "run containers"
  def launch( match = '.*' )
    puts "I'm a run task!"
  end

  desc "start", "start containers"
  def start( match = '.*' )
    puts "I'm a start task!"
  end

  desc "stop", "stop containers"
  def stop( match = '.*' )
    puts "I'm a stop task!"
  end

  desc "clean", "clean all containers"
  def clean( match = '.*' )
    puts "I'm a clean task!"
  end

  def self.source_root
    File.dirname(__FILE__)
  end
end

Box.start